sensor:
# RJ the radiation sensor that pulls station data from radmon.org
# update the 'user' in the get below by checking for your nearest station

  - platform: command_line
    scan_interval: 60
    name: "Radiation CPM"
    unique_id: "Radmon.org_Radiation_station_data"
    command: python -c "import requests; print(str(requests.get('http://radmon.org/radmon.php?function=lastreading&user=rjelbert').text).split(' ', 1)[0])"
    unit_of_measurement: "CPM"
    value_template: "{{ value }}"

# create a Sieverts per hour version of the radiation sensor    
  - platform: template
    sensors:
      radiation_sieverts:
        friendly_name: "Radiation uSv/h"
        unique_id: "Radmon.org_Radiation_station_data_sieverts"
        value_template: "{{ (states('sensor.radiation_cpm') | float(0) * 0.00812037) | round(2) }}"
        unit_of_measurement: "uSv/h"

# RJ an additional radiation sensor but a 10 minute average of the main sensor
#  - platform: statistics
#    name: "Radiation 10 minute average CPM"
#    unique_id: "Radmon.org_Radiation_10_min_average"
#    entity_id: sensor.radiation_cpm
#    state_characteristic: mean
#    max_age:
#      minutes: 10
#    sampling_size: 15

# RJ an additional radiation sensor but a 30 minute average of the main sensor
  - platform: statistics
    name: "Radiation 30 minute average CPM"
    unique_id: "Radmon.org_Radiation_30_min_average"
    entity_id: sensor.radiation_cpm
    state_characteristic: mean
    max_age:
      minutes: 30
    sampling_size: 45

# RJ an additional Sieverts radiation sensor but a 30 minute average of the main sensor
  - platform: statistics
    name: "Radiation 30 minute average uSv/h"
    unique_id: "Radmon.org_Radiation_Sieverts_30_min_average"
    entity_id: sensor.radiation_sieverts
    state_characteristic: mean
    max_age:
      minutes: 30
    sampling_size: 45
